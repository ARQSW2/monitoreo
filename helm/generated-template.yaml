# Source: myapp/templates/configMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: myapp-desa
  labels:
    helm.sh/chart: myapp-0.1.0
    app.kubernetes.io/name: myapp
    app.kubernetes.io/instance: myapp-desa
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  nginx.conf: |
    server {
      listen 8080;
      gzip  on;
      index index.html;
      location = /stub_status {
        stub_status  on;
        default_type text/plain;
        access_log   off;
        allow        127.0.0.1;
        deny all;
      }

      location / {
        root /usr/share/nginx/html;
         try_files $uri $uri/ /index.html =404;
      }

    }
---
# Source: myapp/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: myapp-desa
  labels:
    helm.sh/chart: myapp-0.1.0
    app.kubernetes.io/name: myapp
    app.kubernetes.io/instance: myapp-desa
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
    - port: 9113
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: myapp
    app.kubernetes.io/instance: myapp-desa
---
# Source: myapp/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-desa
  labels:
    helm.sh/chart: myapp-0.1.0
    app.kubernetes.io/name: myapp
    app.kubernetes.io/instance: myapp-desa
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: myapp
      app.kubernetes.io/instance: myapp-desa
  template:
    metadata:
      labels:
        app.kubernetes.io/name: myapp
        app.kubernetes.io/instance: myapp-desa
    spec:
      containers:
        - name: myapp
          image: "nginx:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: myapp-desa-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
          resources:
            limits:
              cpu: "1"
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 128Mi
        # SIDECAR PARA METRICAS DE PROMETHEUS
        - name: myapp-exporter
          image: 'nginx/nginx-prometheus-exporter:0.10.0'
          args:
            - '-nginx.scrape-uri=http://127.0.0.1:8080/stub_status'
          resources:
            limits:
              memory: 128Mi
              cpu: 500m
          ports:
            - name: metrics
              containerPort: 9113
              protocol: TCP
      volumes:
        - configMap:
            defaultMode: 420
            name: myapp-desa
          name: myapp-desa-config
